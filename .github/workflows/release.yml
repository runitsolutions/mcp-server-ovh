name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Run linter
      run: npm run lint

    - name: Run typecheck
      run: npm run typecheck

    - name: Build project
      run: npm run build

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Update package.json version
      run: |
        # Extract version from tag (remove 'v' prefix)
        VERSION=${GITHUB_REF_NAME#v}
        echo "Updating package.json to version $VERSION"

        # Ensure we're on the correct branch
        git fetch origin main
        git checkout main
        git pull origin main --no-edit

        # Update package.json version
        npm version $VERSION --no-git-tag-version --no-commit-hooks

        # Commit the version change
        git add package.json package-lock.json
        git commit -m "chore: Update version to $VERSION [skip ci]"

        # Push the version commit
        git push origin main

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")

        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## Changes since $PREVIOUS_TAG" >> changelog.md
          echo "" >> changelog.md
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> changelog.md
        else
          echo "## Initial Release" >> changelog.md
          echo "" >> changelog.md
          echo "First release of MCP OVH Server with comprehensive API coverage." >> changelog.md
        fi

        echo "" >> changelog.md

        # Read the generated changelog
        {
          echo 'CHANGELOG<<EOF'
          cat changelog.md
          echo EOF
        } >> $GITHUB_OUTPUT

    - name: Publish to npm
      run: |
        npm run clean
        npm run build
        npm run lint
        npm run typecheck
        npm publish
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: false
