name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Run linter
      run: npm run lint

    - name: Run typecheck
      run: npm run typecheck

    - name: Build project
      run: npm run build

    - name: Run endpoint tests
      run: npm run test:endpoints
      env:
        OVH_APP_KEY: ${{ secrets.OVH_APP_KEY }}
        OVH_APP_SECRET: ${{ secrets.OVH_APP_SECRET }}
        OVH_CONSUMER_KEY: ${{ secrets.OVH_CONSUMER_KEY }}
        OVH_ENDPOINT: ovh-us

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")

        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## Changes since $PREVIOUS_TAG" >> changelog.md
          echo "" >> changelog.md
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> changelog.md
        else
          echo "## Initial Release" >> changelog.md
          echo "" >> changelog.md
          echo "First release of MCP OVH Server with comprehensive API coverage." >> changelog.md
        fi

        echo "" >> changelog.md
        echo "### 🔍 Verified Endpoints (17/17)" >> changelog.md
        echo "- User account: /me, /me/bill, /me/payment/method" >> changelog.md
        echo "- Services: /service, /services, /me/api/application" >> changelog.md
        echo "- Infrastructure: /dedicated/server, /vps, /cloud/project" >> changelog.md
        echo "- Network: /ip, /ipLoadbalancing, /vrack" >> changelog.md
        echo "- Additional: /ssl, /dbaas/logs, /license/windows, /metrics" >> changelog.md

        # Read the generated changelog
        {
          echo 'CHANGELOG<<EOF'
          cat changelog.md
          echo EOF
        } >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: false
